// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  NORMAL
  INTERN
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum Completed {
  NO
  YES
}

model User {
  id            Int      @id @default(autoincrement())
  username      String
  email         String   @unique
  password_hash String
  role          Role     @default(NORMAL)
  lists         Lists[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Lists {
  id        Int      @id @default(autoincrement())
  user_id   Int      
  user      User     @relation(fields: [user_id], references: [id])
  name      String   @unique
  category_id Int
  category  Categories?  @relation(fields: [category_id], references: [id])
  tasks     Tasks[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Categories {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  tasks     Tasks[]
  lists     Lists[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tasks {
  id          Int         @id @default(autoincrement())
  list_id     Int
  list        Lists?       @relation(fields: [list_id], references: [id])
  category_id Int
  category    Categories? @relation(fields: [category_id], references: [id])
  title       String      @unique
  description String
  due_date    DateTime
  priority    Priority    @default(LOW)
  completed   Completed   @default(NO)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}
